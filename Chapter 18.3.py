# Глава 18.3 Изменение и получение размеров окна
"""
Для изменения размеров окна предназначены следующие методы:

resize(<Ширина>, <Высота>) - изменяет текущий размер окна.
Размер будет автоматически подогнан, чтобы поместились все компоненты, если используются менеджеры геометрии.
Если используется абсолютное позиционирование, то компоненты могут не попасть на видимую область.
В качестве параметра можно указать экземпляр класса QSize из модуля QtCore:
>>> window.resize(100, 70)
>>> window.resize(QtCore.QSize(100, 70))

setGeometry(<X>, <Y>, <Ширина>, <Высота>) - изменяет положение и размер компонента.
В качестве параметра можно указать экземпляр класса QRect из модуля QtCOre:
>>> window.setGeometry(100, 100, 100, 70)
>>> window.setGeometry(QtCore.QRect(100, 100, 100, 70))

setFixedSize(<Ширина>, <Высота>) - задает фиксированный размер. Изменить размеры с помощью мыши нельзя.
Кнопка "развернуть" неактивна. В качестве параметра можно указать экземпляр класса QSize:
>>> window.setFixedSize(100, 70)
>>> window.setFixedSize(QtCore.QSize(100, 70))

setFixedWidth(<Ширина>) - фиксированный размер по ширине окна.

setFixedHeigth(<Ширина>) - фиксированный размер по высоте окна.

setMinimumSize(<Ширина>, <Высота>) - минимальные размеры окна.
В качестве параметра можно указать экземпляр класса Qsize:
>>> window.setMinimumSize(100, 70)
>>> window.setMinimumSize(QtCore.QSize(100, 70))

setMinimumWidth(<Ширина>) - минимальная ширина.

setMinimumHeigth(<Ширина>) - минимальная высота.

setMaximumSize(<Ширина>, <Высота>) - максимальный размер окна.
В качестве параметра можно указать экземпляр класса QSize:
>>> window.setMaximumSize(100, 70)
>>> window.setMaximumSize(QtCore.QSize(100, 70))

setMaximumWidth(<Ширина>) - максимальная ширина.

setMaximumHeigth(<Ширина>) - максимальная высота.

setBaseSize(<Ширина>, <Высота>) - базовые размеры.
В качестве параметра можно указать экземпляр класса Qsize:
>>> window.setBaseSize(500, 500)
>>> window.setBaseSize(QtCore.QSize(500, 500))

adjustSize() - подгоняет размеры компонента под содержимое, при этому учитываются рекомендуемые размеры, заданные
методом sizeHint().

Получить размеры позволяют следующие методы:

width() и height - текущая ширина и высота:
>>> window.resize(50, 70)
>>> print(window.width(), window.height())  # 50 70

size() - возвращает экземпляр класса QSize, содержащий текущие размеры:
>>> window.resize(50, 70)
>>> print(window.size().width(), window.size().height())  # 50 70

minimumSize() - возвращает экземпляр класса QSize, содержащий минимальные размеры.

minimumWidth() и minimumHeight() - возвращают минимальную ширину и высоту.

maximumSize() - возвращает экземпляр класса QSize, содержащий максимальные размеры.

maximumWidth() и maximumHeight() - возвращают максимальную ширину и высоту.

baseSize() - возвращает экземпляр класса QSize, содержащий базовые размеры.

sizeHint() - возвращает экземпляр класса QSize, содержащий рекомендуемые размеры компонента.
Если параметры отрцательные, то означает, что нет рекомендуемого размера.

minimumSizeHint() - возвращает экземпляр класса QSize, содержащий рекомендуемый минимальный размер компонента.
Если параметры отрцательные, то означает, что нет рекомендуемого минимального размера.

rect() - возвращает экземпляр класса QRect, содержащий координаты и размеры прямоугольника, в который вписан компонент:
>>> window.setGeometry(QtCore.QRect(100, 100, 100, 70))
>>> rect = window.rect()
>>> print(rect.left(), rect.top())  # 0 0
>>> print(rect.width(), rect.height())  # 100 70

geometry() - возвращает экземпляр класса QRect, содержащий координаты относительно родительского компонента:
>>> window.setGeometry(QtCore.QRect(100, 100, 100, 70))
>>> rect = window.geometry()
>>> print(rect.left(), rect.top())  # 100 100
>>> print(rect.width(), rect.height())  # 100 70

Следует учитывать, что размеры не учитывают высоту заголовка и ширину границ.
Фиксированные размеры компонентов лучше не использовать, т.к. стили шрифта и окон на разных компьютерах могут быть
разными.

Чтобы получить размеры окна, включающие заголовок и границы, нужно воспользоваться методом frameSize(), который
возвращает экземпляр класса QSize.
Полные размеры доступны только после отображения окна.
Пример получения полного размера окна:
>>> window.resize(200, 70)  # Задаем размеры
>>> ...
>>> window.show()  # Отображаем окно
>>> print(window.width(), window.height())  # 200 70
>>> print(window.frameSize().width(), window.frameSize().height())  # 208 104

Чтобы получить координаты с учетом заголовка и рамки следует воспользоваться методом frameGeometry().
Полные размеры доступны только после отображения окна.
Метод возвращает экземпляр класса QRect:
>>> window.setGeometry(100, 100, 200, 70)
>>> ...
>>> window.show()  # Отображаем окно
>>> rect = window.geometry()
>>> print(rect.left(), rect.top())  # 100 100
>>> print(rect.width(), rect.height())  # 200 70
>>> rect = window.frameGeometry()
>>> print(rect.left(), rect.top())  # 96 70
>>> print(rect.width(), rect.height())  # 208 104
"""