# Функции getattr(), setattr() и hasattr()
"""
Для доступа к методам и атрибутам используют следующие функции:

getattr() - возвращает значние атрибута по названию, заданному в виде строки.
Можно сформировать имя динмаически во время выполнения программы.
Формат функции:
getattr(<Объект>, <Атрибут>[, <Значение по умолчанию>])

setattr() - задает значение атрибута. Название атрибута указывается в виде строки.
Формат функции:
setattr(<Объект>, <Атрибут>, <Значение>)
Вторым параметром функции можно передать имя несуществующего атрибута и он будет создан.

delattr(<Объект>, <Атрибут>) - удаляет атрибут.

hasattr(<Объект>, <Атрибут>) - проверяет наличие указанного атрибута. Если атрибут существует, возвращается True.
"""


class MyClass:
    def __init__(self):
        self.x = 10

    def get_x(self):
        return self.x


c = MyClass()  # Создаем экземпляр класса
print(getattr(c, "x"))  # Выведет 10
print(getattr(c, "get_x")())  # Выведет 10
print(getattr(c, "y", 0))  # Выведет 0, т.к. атрибут не найден
setattr(c, "y", 20)  # Создаем атрибут y
print(getattr(c, "y", 0))  # Выведет 20
delattr(c, "y")  # Удаляем атрибут y
print(getattr(c, "y", 0))  # Выведет 0, т.к. атрибут не найден
print(hasattr(c, "x"))  # Выведет True
print(hasattr(c, "y"))  # Выведет False
