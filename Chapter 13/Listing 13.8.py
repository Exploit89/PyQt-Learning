# Переопределение методов
"""
Если имя метода в классе Class2 совпадает с именем метода класса Class1, то будет использоваться метод из класса Class2.
Чтобы вызвать одноименный метод из базового класса, перед методом следует через точку написать название базового класса.

Конструктор базового класса автоматически не вызывается, если он переопределен в производном классе.

Чтобы вызвать одноименный метод базового класса можно воспользоваться функцией super().
Формат функции:
super([<Класс>, <Указатель self>])

С помощью этой функции инструкцию:
Class1.__init__(self)

можно записать так:
super().__init__()

или так:
super(Class2, self).__init__()
"""


class Class1:  # Базовый класс
    def __init__(self):
        print("Конструктор базового класса")

    def func1(self):
        print("Метод func1() класса Class1")


class Class2(Class1):  # Класс Class2 наследует класс Class1
    def __init__(self):
        print("Конструктор производного класса")
        Class1.__init__(self)  # Вызываем конструктор базового класса

    def func1(self):
        print("Метод func1() класса Class2")
        Class1.func1(self)  # Вызываем метод базового класса


c = Class2()  # Создаем экземпляр класса Class2
c.func1()  # Вызываем метод func1()
